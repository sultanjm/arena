# A simple reinforcement learning (RL) setup

import arena
import actors from arena.examples

rl = arena.Arena() # start a new arena

agent1 = actors.GreedyQAgent()
agent2 = actors.RandomAgent()
domain = actors.SimpleMDP()

domain.controlled_by(agent1, control_channels=[0,1])
domain.controlled_by(agent2, control_channels=[2])
agent1.influenced_by(domain, control_channels=[2], feedback_channels=[0])
agent2.influenced_by(domain, control_channels=[0,1], feedback_channels=[0,1])

rl.register(agent1, agent2, domain)

rl.pre_decision_info_schema([[0,0],[1,0]])
rl.post_decision_info_schema([[1,1],[1,1]])

while True:
    rl.tick()
    if domain.says('done'): break

some_stats = rl.stats()

domain.render()

# A simple normal game (NG) setup

import arena
import actors from arena.examples

ng = arena.Arena() # start a new arena

aco_agent = actors.AlwayCoOpAgent()
tft_agent = actors.TitForTatAgent()
pd = actors.PrisonersDilemma()

pd.controlled_by(aco_agent, channels=[0])
pd.controlled_by(tft_agent, channels=[1])
aco_agent.influenced_by(pd)
tft_agent.influenced_by(pd)

ng.register(pd, aco_agent, tft_agent)

ng.pre_decision_info_schema([[0,0],[0,0]])

ng.tick()
